-- Generated by Oracle SQL Developer Data Modeler 19.2.0.182.1216
--   at:        2020-05-12 21:32:24 CEST
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g

prompt #---------------------#
prompt #- Pomocne procedury -#
prompt #---------------------#

create or replace procedure SMAZ_VSECHNY_TABULKY AS
-- pokud v logu bude uvedeno, ze nektery objekt nebyl zrusen, protoze na nej jiny jeste existujici objekt stavi, spust proceduru opakovane, dokud se nezrusi vse
begin
  for iRec in 
    (select distinct OBJECT_TYPE, OBJECT_NAME,
      'drop '||OBJECT_TYPE||' "'||OBJECT_NAME||'"'||
      case OBJECT_TYPE when 'TABLE' then ' cascade constraints purge' else ' ' end as PRIKAZ
    from USER_OBJECTS where OBJECT_NAME not in ('SMAZ_VSECHNY_TABULKY', 'VYPNI_CIZI_KLICE', 'ZAPNI_CIZI_KLICE', 'VYMAZ_DATA_VSECH_TABULEK')
    ) loop
        begin
          dbms_output.put_line('Prikaz: '||irec.prikaz);
        execute immediate iRec.prikaz;
        exception
          when others then dbms_output.put_line('NEPOVEDLO SE!');
        end;
      end loop;
end;
/

create or replace procedure VYPNI_CIZI_KLICE as 
begin
  for cur in (select CONSTRAINT_NAME, TABLE_NAME from USER_CONSTRAINTS where CONSTRAINT_TYPE = 'R' ) 
  loop
    execute immediate 'alter table '||cur.TABLE_NAME||' modify constraint "'||cur.CONSTRAINT_NAME||'" DISABLE';
  end loop;
end VYPNI_CIZI_KLICE;
/


create or replace procedure ZAPNI_CIZI_KLICE as 
begin
  for cur in (select CONSTRAINT_NAME, TABLE_NAME from USER_CONSTRAINTS where CONSTRAINT_TYPE = 'R' ) 
  loop
    execute immediate 'alter table '||cur.TABLE_NAME||' modify constraint "'||cur.CONSTRAINT_NAME||'" enable validate';
  end loop;
end ZAPNI_CIZI_KLICE;
/

create or replace procedure VYMAZ_DATA_VSECH_TABULEK is
begin
  -- Vymazat data vsech tabulek
  VYPNI_CIZI_KLICE;
  for v_rec in (select distinct TABLE_NAME from USER_TABLES)
  loop
    execute immediate 'truncate table '||v_rec.TABLE_NAME||' drop storage';
  end loop;
  ZAPNI_CIZI_KLICE;
  
  -- Nastavit vsechny sekvence od 1
  for v_rec in (select distinct SEQUENCE_NAME  from USER_SEQUENCES)
  loop
    execute immediate 'alter sequence '||v_rec.SEQUENCE_NAME||' restart start with 1';
  end loop;
end VYMAZ_DATA_VSECH_TABULEK;
/

prompt #------------------------#
prompt #- Zrusit stare tabulky -#
prompt #------------------------#

exec SMAZ_VSECHNY_TABULKY;

prompt #-------------------------#
prompt #- Vytvorit nove tabulky -#
prompt #-------------------------#



CREATE TABLE adresa (
    id_adresa                  INTEGER NOT NULL,
    supisne_cislo_domu         INTEGER NOT NULL,
    ulica                      VARCHAR2(30 CHAR) NOT NULL,
    mesto                      VARCHAR2(30 CHAR) NOT NULL,
    krajina                    VARCHAR2(40 CHAR) NOT NULL,
    postove_smerovacie_cislo   VARCHAR2(20 CHAR) NOT NULL
);

ALTER TABLE adresa ADD CONSTRAINT pk_adresa PRIMARY KEY ( id_adresa );

CREATE TABLE batozina (
    id_batozina    INTEGER NOT NULL,
    id_letenka     INTEGER NOT NULL,
    batozina_typ   VARCHAR2(15 CHAR) NOT NULL
);

ALTER TABLE batozina
    ADD CONSTRAINT arc_3_lov CHECK ( batozina_typ IN (
        'prirucna',
        'tazka'
    ) );

ALTER TABLE batozina ADD CONSTRAINT pk_batozina PRIMARY KEY ( id_batozina );

CREATE TABLE destinacia (
    id_destinacia      INTEGER NOT NULL,
    nazov_destinacia   VARCHAR2(40 BYTE) NOT NULL,
    mesto              VARCHAR2(40 CHAR) NOT NULL,
    stat               VARCHAR2(40 CHAR) NOT NULL
);

ALTER TABLE destinacia ADD CONSTRAINT pk_destinacia PRIMARY KEY ( id_destinacia );

CREATE TABLE destinaciav1 (
    id_let          INTEGER NOT NULL,
    id_destinacia   INTEGER NOT NULL
);

ALTER TABLE destinaciav1 ADD CONSTRAINT pk_destinaciav1 PRIMARY KEY ( id_let,
                                                                      id_destinacia );

CREATE TABLE hodnotenie (
    id_hodnotenie      INTEGER NOT NULL,
    vyska_hodnotenia   INTEGER NOT NULL,
    id_zakaznik        INTEGER
);

ALTER TABLE hodnotenie ADD CHECK ( vyska_hodnotenia BETWEEN 1 AND 10 );

ALTER TABLE hodnotenie ADD CONSTRAINT pk_hodnotenie PRIMARY KEY ( id_hodnotenie );

CREATE TABLE let (
    id_let        INTEGER NOT NULL,
    typ_let       VARCHAR2(20 CHAR) NOT NULL,
    prestupnost   VARCHAR2(20 CHAR) NOT NULL
);

ALTER TABLE let
    ADD CHECK ( typ_let IN (
        'medzistatny',
        'transkontinentalny',
        'vnutrozemny'
    ) );

ALTER TABLE let ADD CONSTRAINT pk_let PRIMARY KEY ( id_let );

CREATE TABLE letenka (
    id_letenka      INTEGER NOT NULL,
    datum_odletu    DATE NOT NULL,
    datum_priletu   DATE,
    id_typ          INTEGER NOT NULL,
    cena            NUMBER(6, 2) NOT NULL,
    id_let          INTEGER NOT NULL,
    sedadlo         INTEGER NOT NULL,
    rada            INTEGER NOT NULL,
    id_zakaznik     INTEGER NOT NULL
);

ALTER TABLE letenka ADD CONSTRAINT pk_letenka PRIMARY KEY ( id_letenka );

CREATE TABLE prirucna (
    vyska_prirucna   INTEGER NOT NULL,
    sirka_prirucna   INTEGER NOT NULL,
    vaha_prirucna    INTEGER NOT NULL,
    id_batozina      INTEGER NOT NULL
);

ALTER TABLE prirucna ADD CHECK ( vyska_prirucna BETWEEN 0 AND 50 );

ALTER TABLE prirucna ADD CHECK ( sirka_prirucna BETWEEN 0 AND 45 );

ALTER TABLE prirucna ADD CHECK ( vaha_prirucna BETWEEN 0 AND 8 );

ALTER TABLE prirucna ADD CONSTRAINT pk_prirucna PRIMARY KEY ( id_batozina );

CREATE TABLE tazka_batozina (
    vaha_tazka    INTEGER NOT NULL,
    id_batozina   INTEGER NOT NULL
);

ALTER TABLE tazka_batozina ADD CHECK ( vaha_tazka BETWEEN 0 AND 27 );

ALTER TABLE tazka_batozina ADD CONSTRAINT pk_tazka_batozina PRIMARY KEY ( id_batozina );

CREATE TABLE typ_letenka (
    id_typ          INTEGER NOT NULL,
    nazov_letenka   VARCHAR2(20 CHAR) NOT NULL
);

ALTER TABLE typ_letenka
    ADD CHECK ( nazov_letenka IN (
        'dieta',
        'dochodca',
        'dospely',
        'student'
    ) );

ALTER TABLE typ_letenka ADD CONSTRAINT pk_typ_letenka PRIMARY KEY ( id_typ );

CREATE TABLE zakaznik (
    id_zakaznik       INTEGER NOT NULL,
    meno              VARCHAR2(20 CHAR) NOT NULL,
    priezvisko        VARCHAR2(20 CHAR) NOT NULL,
    datum_narodenia   DATE NOT NULL,
    rodne_cislo       VARCHAR2(20 CHAR) NOT NULL,
    email             VARCHAR2(30 CHAR) NOT NULL,
    telefonne_cislo   VARCHAR2(20 CHAR) NOT NULL,
    dovod_cesty       VARCHAR2(20 CHAR),
    id_adresa         INTEGER NOT NULL
);

ALTER TABLE zakaznik
    ADD CHECK ( dovod_cesty IN (
        'dovolenka',
        'iny',
        'navsteva',
        'praca'
    ) );

ALTER TABLE zakaznik ADD CONSTRAINT pk_zakaznik PRIMARY KEY ( id_zakaznik );

ALTER TABLE batozina
    ADD CONSTRAINT fk_batozina_letenka FOREIGN KEY ( id_letenka )
        REFERENCES letenka ( id_letenka );

ALTER TABLE destinaciav1
    ADD CONSTRAINT fk_destinaciav1_destinacia FOREIGN KEY ( id_destinacia )
        REFERENCES destinacia ( id_destinacia );

ALTER TABLE destinaciav1
    ADD CONSTRAINT fk_destinaciav1_let FOREIGN KEY ( id_let )
        REFERENCES let ( id_let );

ALTER TABLE hodnotenie
    ADD CONSTRAINT fk_hodnotenie_zakaznik FOREIGN KEY ( id_zakaznik )
        REFERENCES zakaznik ( id_zakaznik );

ALTER TABLE letenka
    ADD CONSTRAINT fk_letenka_let FOREIGN KEY ( id_let )
        REFERENCES let ( id_let );

ALTER TABLE letenka
    ADD CONSTRAINT fk_letenka_typ_letenka FOREIGN KEY ( id_typ )
        REFERENCES typ_letenka ( id_typ );

ALTER TABLE letenka
    ADD CONSTRAINT fk_letenka_zakaznik FOREIGN KEY ( id_zakaznik )
        REFERENCES zakaznik ( id_zakaznik );

ALTER TABLE prirucna
    ADD CONSTRAINT fk_prirucna_batozina FOREIGN KEY ( id_batozina )
        REFERENCES batozina ( id_batozina );

ALTER TABLE tazka_batozina
    ADD CONSTRAINT fk_tazka_batozina_batozina FOREIGN KEY ( id_batozina )
        REFERENCES batozina ( id_batozina );

ALTER TABLE zakaznik
    ADD CONSTRAINT fk_zakaznik_adresa FOREIGN KEY ( id_adresa )
        REFERENCES adresa ( id_adresa );

CREATE OR REPLACE TRIGGER arc_arc_3_prirucna BEFORE
    INSERT OR UPDATE OF id_batozina ON prirucna
    FOR EACH ROW
DECLARE
    d VARCHAR2(15 CHAR);
BEGIN
    SELECT
        a.batozina_typ
    INTO d
    FROM
        batozina a
    WHERE
        a.id_batozina = :new.id_batozina;

    IF ( d IS NULL OR d <> 'prirucna' ) THEN
        raise_application_error(-20223, 'FK FK_PRIRUCNA_BATOZINA in Table PRIRUCNA violates Arc constraint on Table BATOZINA - discriminator column Batozina_typ doesn''t have value ''prirucna'''
        );
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

CREATE OR REPLACE TRIGGER arc_arc_3_tazka_batozina BEFORE
    INSERT OR UPDATE OF id_batozina ON tazka_batozina
    FOR EACH ROW
DECLARE
    d VARCHAR2(15 CHAR);
BEGIN
    SELECT
        a.batozina_typ
    INTO d
    FROM
        batozina a
    WHERE
        a.id_batozina = :new.id_batozina;

    IF ( d IS NULL OR d <> 'tazka' ) THEN
        raise_application_error(-20223, 'FK FK_TAZKA_BATOZINA_BATOZINA in Table TAZKA_BATOZINA violates Arc constraint on Table BATOZINA - discriminator column Batozina_typ doesn''t have value ''tazka'''
        );
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            11
-- CREATE INDEX                             0
-- ALTER TABLE                             30
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           2
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0